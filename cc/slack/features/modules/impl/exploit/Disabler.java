/*    */ package cc.slack.features.modules.impl.exploit;
/*    */ 
/*    */ import cc.slack.events.impl.network.PacketEvent;
/*    */ import cc.slack.events.impl.player.MoveEvent;
/*    */ import cc.slack.events.impl.player.UpdateEvent;
/*    */ import cc.slack.events.impl.player.WorldEvent;
/*    */ import cc.slack.features.modules.api.Category;
/*    */ import cc.slack.features.modules.api.Module;
/*    */ import cc.slack.features.modules.api.ModuleInfo;
/*    */ import cc.slack.features.modules.api.settings.Value;
/*    */ import cc.slack.features.modules.api.settings.impl.BooleanValue;
/*    */ import cc.slack.features.modules.api.settings.impl.ModeValue;
/*    */ import cc.slack.features.modules.impl.exploit.disablers.IDisabler;
/*    */ import cc.slack.features.modules.impl.exploit.disablers.verus.VerusReachDisabler;
/*    */ import cc.slack.features.modules.impl.exploit.disablers.vulcan.VulcanReachDisabler;
/*    */ import cc.slack.utils.client.mc;
/*    */ import cc.slack.utils.network.PacketUtil;
/*    */ import io.github.nevalackin.radbus.Listen;
/*    */ import java.util.Objects;
/*    */ import net.minecraft.entity.Entity;
/*    */ import net.minecraft.network.Packet;
/*    */ import net.minecraft.network.play.client.C08PacketPlayerBlockPlacement;
/*    */ import net.minecraft.network.play.client.C0BPacketEntityAction;
/*    */ import net.minecraft.network.play.client.C0CPacketInput;
/*    */ import net.minecraft.network.play.client.C18PacketSpectate;
/*    */ 
/*    */ @ModuleInfo(name = "Disabler", category = Category.EXPLOIT)
/*    */ public class Disabler
/*    */   extends Module
/*    */ {
/* 31 */   private final ModeValue<IDisabler> mode = new ModeValue((Object[])new IDisabler[] { (IDisabler)new VerusReachDisabler(), (IDisabler)new VulcanReachDisabler() });
/* 32 */   private final BooleanValue verusScaffold = new BooleanValue("Verus Scaffold Check", false);
/* 33 */   private final BooleanValue verusOmniSprint = new BooleanValue("Verus OmniSprint Check", false);
/* 34 */   private final BooleanValue vulcanSprint = new BooleanValue("Vulcan Sprint Check", false);
/* 35 */   private final BooleanValue vulcanLimit = new BooleanValue("Vulcan Scaffold Limit Check", false);
/* 36 */   private final BooleanValue spectator = new BooleanValue("Spectator Spoof", false);
/* 37 */   private final BooleanValue riding = new BooleanValue("Riding Spoof", false);
/*    */ 
/*    */   
/*    */   public Disabler() {
/* 41 */     addSettings(new Value[] { (Value)this.mode, (Value)this.verusScaffold, (Value)this.verusOmniSprint, (Value)this.vulcanSprint, (Value)this.vulcanLimit, (Value)this.spectator, (Value)this.riding });
/*    */   }
/*    */ 
/*    */ 
/*    */   
/*    */   public void onEnable() {
/* 47 */     ((IDisabler)this.mode.getValue()).onEnable();
/* 48 */     if (((Boolean)this.verusOmniSprint.getValue()).booleanValue() && mc.getPlayer().isSprinting()) {
/* 49 */       PacketUtil.sendNoEvent((Packet)new C0BPacketEntityAction((Entity)mc.getPlayer(), C0BPacketEntityAction.Action.STOP_SPRINTING));
/*    */     }
/*    */   }
/*    */ 
/*    */   
/*    */   public void onDisable() {
/* 55 */     ((IDisabler)this.mode.getValue()).onDisable();
/*    */   }
/*    */   
/*    */   @Listen
/*    */   public void onMove(MoveEvent event) {
/* 60 */     ((IDisabler)this.mode.getValue()).onMove(event);
/*    */   }
/*    */   
/*    */   @Listen
/*    */   public void onUpdate(UpdateEvent event) {
/* 65 */     if (((Boolean)this.vulcanLimit.getValue()).booleanValue()) {
/* 66 */       PacketUtil.sendNoEvent((Packet)new C0BPacketEntityAction((Entity)mc.getPlayer(), C0BPacketEntityAction.Action.STOP_SNEAKING));
/* 67 */       PacketUtil.sendNoEvent((Packet)new C0BPacketEntityAction((Entity)mc.getPlayer(), C0BPacketEntityAction.Action.START_SNEAKING));
/*    */     } 
/* 69 */     ((IDisabler)this.mode.getValue()).onUpdate(event);
/*    */   }
/*    */   
/*    */   @Listen
/*    */   public void onWorld(WorldEvent event) {
/* 74 */     ((IDisabler)this.mode.getValue()).onWorld(event);
/*    */   }
/*    */   
/*    */   @Listen
/*    */   public void onPacket(PacketEvent event) {
/* 79 */     Packet packet = event.getPacket();
/*    */     
/* 81 */     if (((Boolean)this.vulcanSprint.getValue()).booleanValue() && packet instanceof C0BPacketEntityAction && 
/* 82 */       Objects.equals(packet, new C0BPacketEntityAction((Entity)mc.getPlayer(), C0BPacketEntityAction.Action.START_SNEAKING))) {
/* 83 */       event.cancel();
/*    */     }
/*    */     
/* 86 */     if (((Boolean)this.verusOmniSprint.getValue()).booleanValue() && packet instanceof C0BPacketEntityAction) {
/* 87 */       event.cancel();
/*    */     }
/* 89 */     if (((Boolean)this.verusScaffold.getValue()).booleanValue() && packet instanceof C08PacketPlayerBlockPlacement) {
/* 90 */       ((C08PacketPlayerBlockPlacement)packet).stack = null;
/*    */     }
/* 92 */     if (((Boolean)this.spectator.getValue()).booleanValue() && packet instanceof net.minecraft.network.play.client.C03PacketPlayer) {
/* 93 */       mc.getNetHandler().addToSendQueue((Packet)new C18PacketSpectate(mc.getPlayer().getUniqueID()));
/*    */     }
/* 95 */     if (((Boolean)this.riding.getValue()).booleanValue() && packet instanceof net.minecraft.network.play.client.C03PacketPlayer) {
/* 96 */       mc.getNetHandler().addToSendQueue((Packet)new C0CPacketInput((mc.getPlayer()).moveStrafing, (mc.getPlayer()).moveForward, (mc.getPlayer()).movementInput.jump, (mc.getPlayer()).movementInput.sneak));
/*    */     }
/* 98 */     ((IDisabler)this.mode.getValue()).onPacket(event);
/*    */   }
/*    */ }


/* Location:              C:\Users\andre\Downloads\Slack.jar!\cc\slack\features\modules\impl\exploit\Disabler.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */